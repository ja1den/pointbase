extends includes/layout.pug

block content
	h4 Dashboard
	p.text-muted Results for each event.

	form#event-form(action='/dashboard', method='GET')
		.row
			.col.col-lg-6.mb-3
				.input-group
					select.form-select(name='event', required)
						each record in events.sort((a, b) => a.id - b.id)
							option(value=record.id, selected=record.id === event.id)=record.name
					button.btn.btn-primary(type='submit') Submit

	if houses.length === 0
		p There are no houses.
	else
		.row.row-cols-1.row-cols-sm-2.gy-3.mb-3
			each house in [...houses].sort((a, b) => b.get('points') - a.get('points'))
				.col-lg
					.card.text-center(style={ 'border-color': house.colour, 'color': house.colour })
						.card-body
							h2.card-title(style={ 'white-space': 'nowrap' })=house.name
							p.fs-3.mb-0=house.get('points') || 0

		.row.row-cols-1.row-cols-md-2.gy-3.mb-3.d-none.d-sm-flex
			.col: .card: .card-body: canvas#chart-1
			.col: .card: .card-body: canvas#chart-2

		.row.gy-3.mb-3
			.col: .card: .card-body: .table-responsive
				table.table.table-striped.text-nowrap
					thead
						tr
							th Sport
							each house in houses
								th=house.name
					tbody
						each entry in Object.entries(sportHouseData)
							tr
								td=entry[0]
								each _, i in Array(houses.length)
									td=entry[1][i] || 0
					tfoot
						tr
							td Total
							each house in houses
								td=house.get('points') || 0

block append scripts
	script.
		const interval = !{interval};

		const houses = JSON.parse('!{JSON.stringify(houses)}');
		const sportHouseData = JSON.parse('!{JSON.stringify(sportHouseData)}');
		const intervalData = JSON.parse('!{JSON.stringify(intervalData)}');

	script(src='/js/dashboard.js')
