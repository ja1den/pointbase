extends includes/layout.pug

block content
	-
		function ordinal(i) {
			const j = i % 10;
			const k = i % 100;

			if (j == 1 && k != 11) return i + '<sup>st</sup>';
			if (j == 2 && k != 12) return i + '<sup>nd</sup>';
			if (j == 3 && k != 13) return i + '<sup>rd</sup>';

			return i + '<sup>th</sup>';
		}

	h4 Results Form
	p.text-muted Enter sport results.

	form#event-form(action='/results_form', method='GET')
		.row
			.col.col-lg-6.mb-3
				.input-group
					select.form-select(name='sport', required)
						each record in sports.sort((a, b) => a.id - b.id)
							option(value=record.id, selected=record.id === sport.id)=record.name
					button.btn.btn-primary(type='submit') Submit

	if houses.length === 0
		p There are no houses.
	else
		form#result-form(data-event-id=event.id, data-sport-id=sport.id, data-sport-type=sport.sport_type.name, novalidate)
			case sport.sport_type.name
				when 'House Ranking'
				when 'House Ranking, plus Bonus'
					.table-responsive
						table.table.table-striped.text-nowrap
							thead
								tr
									th Place
									each house in houses
										th: p.mb-0(style={ 'color': house.colour })=house.name
							tbody
								each _, i in Array(houses.length)
									tr
										td !{ordinal(i + 1)}
										each house in houses
											td
												input.form-check-input(type='radio', name='places[' + i + ']', value=house.id, required)

								if sport.sport_type.name === 'House Ranking, plus Bonus'
									tr
										td.align-middle Bonus
										each house in houses
											td
												input.form-control(type='number', name='bonus-' + house.id, min='0', value='0', required)

					p.text-danger.d-none Houses can only place once.

				when 'Student Points'
					.mb-3
						.row
							label.form-label(for='record-house') House
						.row
							.btn-group(role='group')
								each house in houses
									input.btn-check(type='radio', id='house-' + house.id, name='houseId', value=house.id)
									label.btn.btn-outline-secondary(for='house-' + house.id)=house.name

					.mb-3
						.row
							label.form-label(for='record-points') Points
						.row
							.btn-group(role='group')
								each score in [1, 2, 3]
									input.btn-check(type='radio', id='points-' + score, name='points', value=score)
									label.btn.btn-outline-secondary(for='points-' + score)=score

				when 'Placement and Participation'
					p Placement and Participation

			button.btn.btn-primary.me-2(type='submit') Submit
			button.btn.btn-secondary(type='reset') Reset

block append scripts
	script(src='/js/results_form.js')
